package sample.demo2;import Model.Admin;import javafx.collections.ObservableList;import javafx.event.ActionEvent;import javafx.fxml.FXML;import javafx.fxml.FXMLLoader;import javafx.fxml.Initializable;import javafx.scene.Node;import javafx.scene.Parent;import javafx.scene.Scene;import javafx.scene.control.Button;import javafx.scene.control.TableCell;import javafx.scene.control.TableColumn;import javafx.scene.control.TableView;import javafx.scene.control.cell.PropertyValueFactory;import javafx.stage.Stage;import java.io.IOException;import java.net.URL;import java.util.Objects;import java.util.ResourceBundle;public class AdminAllAdminController implements Initializable {	@FXML	private TableView<Admin> adminTable;	@FXML	private TableColumn<Admin, String> adminId,  adminName, email, phone, srNo;	@FXML	private TableColumn<Admin, Button> deleteButton, editButton, viewButton;		private Stage stage;	private Scene scene;	private Parent root;	private DatabaseConnection database = DatabaseConnection.getInstance ();		@Override	public void initialize(URL url, ResourceBundle resourceBundle) {		try {			ObservableList <Admin> adminList = database.getAllAdmin();						srNo.setCellValueFactory(new PropertyValueFactory<>("srNo"));			adminId.setCellValueFactory(new PropertyValueFactory<>("id"));			adminName.setCellValueFactory(new PropertyValueFactory<>("name"));			email.setCellValueFactory(new PropertyValueFactory<>("email"));			phone.setCellValueFactory(new PropertyValueFactory<>("phone"));			viewButton.setCellValueFactory(new PropertyValueFactory<>("viewButton"));			editButton.setCellValueFactory(new PropertyValueFactory<>("editButton"));			deleteButton.setCellValueFactory(new PropertyValueFactory<>("deleteButton"));						adminTable.setItems(adminList);						viewButton.setCellFactory(param -> new TableCell<Admin, Button>() {				@Override				protected void updateItem(Button button, boolean empty) {					super.updateItem(button, empty);										if (empty || button == null) {						setGraphic(null);					} else {						setGraphic(button);						button.setOnAction(event -> {							Admin admin = getTableView().getItems().get(getIndex());							AdminViewSingleAdminController.setAdminId(admin.getId());														try {								toViewAdmin(event);							} catch (IOException e) {								throw new RuntimeException(e);							}						});					}				}			});						editButton.setCellFactory(param -> new TableCell<Admin, Button>() {				@Override				protected void updateItem(Button button, boolean empty) {					super.updateItem(button, empty);										if (empty || button == null) {						setGraphic(null);					} else {						setGraphic(button);						button.setOnAction(event -> {							Admin admin = getTableView().getItems().get(getIndex());							AdminEditSingleAdminController.setAdminId(admin.getId());														try {								toEditAdmin (event);							} catch (IOException e) {								throw new RuntimeException(e);							}						});					}				}			});						deleteButton.setCellFactory(param -> new TableCell<Admin, Button>() {				@Override				protected void updateItem(Button button, boolean empty) {					super.updateItem(button, empty);										if (empty || button == null) {						setGraphic(null);					} else {						setGraphic(button);						button.setOnAction(event -> {							Admin admin = getTableView().getItems().get(getIndex());														try {								deleteAdmin (event, admin.getId ());							} catch (IOException e) {								throw new RuntimeException(e);							}						});					}				}			});		} catch (Exception e) {			System.out.println(e.getMessage());		}	}		public void toAllPatient ( ActionEvent event) throws IOException {		root = FXMLLoader.load( Objects.requireNonNull(getClass().getResource("adminAllPatients.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene (root);		stage.setScene(scene);		stage.show();	}		public void toAllAdmin ( ActionEvent event) throws IOException {		root = FXMLLoader.load( Objects.requireNonNull(getClass().getResource("adminAllAdmin.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene (root);		stage.setScene(scene);		stage.show();	}		public void toAdminHome ( ActionEvent event) throws IOException {		root = FXMLLoader.load( Objects.requireNonNull(getClass().getResource("adminHome.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene (root);		stage.setScene(scene);		stage.show();	}	public void toAllDoctor ( ActionEvent event) throws IOException {		root = FXMLLoader.load( Objects.requireNonNull(getClass().getResource("adminAllDoctor.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene (root);		stage.setScene(scene);		stage.show();	}		public void toViewAdmin(ActionEvent event) throws IOException {		root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource("adminViewSingleAdmin.fxml")));		stage = (Stage) ((Node) event.getSource()).getScene().getWindow();		scene = new Scene(root);		stage.setScene(scene);		stage.show();	}		public void toEditAdmin(ActionEvent event) throws IOException {		root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource("adminEditSingleAdmin.fxml")));		stage = (Stage) ((Node) event.getSource()).getScene().getWindow();		scene = new Scene(root);		stage.setScene(scene);		stage.show();	}			public void deleteAdmin(ActionEvent event, String id) throws IOException {		database.deleteAdminById ( id );		adminTable.setItems(database.getAllAdmin());	}		public void toAddAdmin(ActionEvent event) throws IOException {		root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource("adminAddAdmin.fxml")));		stage = (Stage) ((Node) event.getSource()).getScene().getWindow();		scene = new Scene(root);		stage.setScene(scene);		stage.show();	}		public void logout(ActionEvent event) throws IOException {		root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource("landing.fxml")));		stage = (Stage) ((Node) event.getSource()).getScene().getWindow();		scene = new Scene(root);		stage.setScene(scene);		stage.show();	}	}