package sample.demo2;import Model.Appointment;import Model.Department;import Model.Doctor;import javafx.collections.FXCollections;import javafx.collections.ObservableList;import javafx.event.ActionEvent;import javafx.fxml.FXML;import javafx.fxml.FXMLLoader;import javafx.fxml.Initializable;import javafx.scene.Node;import javafx.scene.Parent;import javafx.scene.Scene;import javafx.scene.control.*;import javafx.scene.control.cell.PropertyValueFactory;import javafx.scene.layout.HBox;import javafx.scene.layout.VBox;import javafx.stage.Stage;import java.io.IOException;import java.net.URL;import java.util.ArrayList;import java.util.List;import java.util.Objects;import java.util.ResourceBundle;public class DoctorHomeController implements Initializable {	@FXML	private TableView <Appointment> aptTable;		@FXML	private TableColumn <Appointment, String> date, aptId, srNo, time, patName;		@FXML	private TableColumn<Appointment, Button> editButton, viewButton;	@FXML	private Label docCnic, docDepartment, docEmail, docId, docName, docPhone;	private Stage stage;	private Scene scene;	private Parent root;	public static String doctorId;		public static void setDoctorId ( String doctorId ) {		DoctorHomeController.doctorId = doctorId;	}		DatabaseConnection database = DatabaseConnection.getInstance ();		@Override	public void initialize ( URL url, ResourceBundle resourceBundle ) {		try {			Doctor doctor = database.getDoctorById ( doctorId );			docName.setText ( doctor.getName () );			docCnic.setText ( doctor.getCnic () );			docDepartment.setText ( doctor.getDepartment () );			docEmail.setText ( doctor.getEmail () );			docPhone.setText ( doctor.getPhone () );			docId.setText ( doctor.getId () );									ObservableList <Appointment> appointmentList = database.getAllAppointmentByDoctor (doctorId);									srNo.setCellValueFactory(new PropertyValueFactory <> ("srNo"));			aptId.setCellValueFactory(new PropertyValueFactory<>("id"));			patName.setCellValueFactory(new PropertyValueFactory<>("patientName"));			date.setCellValueFactory(new PropertyValueFactory<>("date"));			time.setCellValueFactory(new PropertyValueFactory<>("time"));						viewButton.setCellValueFactory(new PropertyValueFactory<>("viewButton"));			editButton.setCellValueFactory(new PropertyValueFactory<>("editButton"));						aptTable.setItems(appointmentList);						viewButton.setCellFactory(param -> new TableCell <Appointment, Button> () {				@Override				protected void updateItem(Button button, boolean empty) {					super.updateItem(button, empty);										if (empty || button == null) {						setGraphic(null);					} else {						setGraphic(button);						button.setOnAction(event -> {							Appointment appointment = getTableView().getItems().get(getIndex());							DoctorViewSingleAppointmentController.setAppointmentId(appointment.getId ());														try {								toViewAppointment(event);							} catch (IOException e) {								throw new RuntimeException(e);							}						});					}				}			});									editButton.setCellFactory(param -> new TableCell<Appointment, Button>() {				@Override				protected void updateItem(Button button, boolean empty) {					super.updateItem(button, empty);										if (empty || button == null) {						setGraphic(null);					} else {						setGraphic(button);						button.setOnAction(event -> {							Appointment appointment = getTableView().getItems().get(getIndex());							DoctorEditSingleAppointmentController.setAppointmentId ( appointment.getId () );							try {								toEditAppointment (event);							} catch (IOException e) {								throw new RuntimeException(e);							}						});					}				}			});					} catch (Exception e) {			System.out.println(e.getMessage ());		}			}			public void toViewAppointment(ActionEvent event) throws IOException {		root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource("doctorViewSingleAppointment.fxml")));		stage = (Stage) ((Node) event.getSource()).getScene().getWindow();		scene = new Scene(root);		stage.setScene(scene);		stage.show();	}	public void toEditAppointment(ActionEvent event) throws IOException {		root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource("doctorEditSingleAppointment.fxml")));		stage = (Stage) ((Node) event.getSource()).getScene().getWindow();		scene = new Scene(root);		stage.setScene(scene);		stage.show();	}	public void logout ( ActionEvent event) throws IOException {		root = FXMLLoader.load( Objects.requireNonNull(getClass().getResource("landing.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene (root);		stage.setScene(scene);		stage.show();	}			}