package sample.demo2;import Model.Department;import Model.Doctor;import javafx.collections.ObservableList;import javafx.event.ActionEvent;import javafx.fxml.FXML;import javafx.fxml.FXMLLoader;import javafx.fxml.Initializable;import javafx.scene.Node;import javafx.scene.Parent;import javafx.scene.Scene;import javafx.scene.control.TextField;import javafx.stage.Stage;import java.io.IOException;import java.net.URL;import java.util.Objects;import java.util.ResourceBundle;public class AdminEditSingleDoctorController implements Initializable {	@FXML	private TextField addressField, departmentField, cityField, cnicField, emailField, idField, fnameField, lnameField, phoneField;		private static String doctorId;	private Stage stage;	private Scene scene;	private Parent root;	DatabaseConnection database = DatabaseConnection.getInstance ();	public static void setDoctorId ( String doctorId ) {		AdminEditSingleDoctorController.doctorId = doctorId;	}	Doctor doctor = database.getDoctorById ( doctorId );			Department departmentName = database.getDepartmentById ( doctor.getDepartment () );	@Override	public void initialize ( URL url, ResourceBundle resourceBundle ) {		try {						String[] name = doctor.getName ().split ( " " );						idField.setText ( doctor.getId () );			fnameField.setText ( name[0] );			lnameField.setText (name[1]);			phoneField.setText ( doctor.getPhone () );			emailField.setText ( doctor.getEmail () );			cnicField.setText ( doctor.getCnic () );			cityField.setText ( doctor.getCity () );			departmentField.setText ( departmentName.getName () );			addressField.setText ( doctor.getHouse () );					} catch (Exception e) {			e.printStackTrace ();		}			}	public boolean validity () {		boolean validity = true;				if ( !AlphabetValidator.isValid ( cityField )) {			cityField.setStyle("-fx-background-color: #ebbebebe;");			validity = false;		}		if ( departmentField.getText ().isBlank () ) {			departmentField.setStyle("-fx-background-color: #ebbebebe;");			validity = false;		}		if ( !AlphabetValidator.isValid ( fnameField )) {			fnameField.setStyle("-fx-background-color: #ebbebebe;");			validity = false;		}		if ( !AlphabetValidator.isValid ( lnameField )) {			lnameField.setStyle("-fx-background-color: #ebbebebe;");			validity = false;		}		if ( !NumberValidator.isValid ( phoneField )) {			phoneField.setStyle("-fx-background-color: #ebbebebe;");			validity = false;		}		if ( addressField.getText().isBlank()) {			addressField.setStyle("-fx-background-color: #ebbebebe;");			validity = false;		}		if ( !EmailValidator.isValid( emailField )) {			emailField.setStyle("-fx-background-color: #ebbebebe;");			validity = false;		}		if ( !CNICValidator.isValid ( cnicField )) {			cnicField.setStyle("-fx-background-color: #ebbebebe;");			validity = false;		}				ObservableList<Doctor> doctorList = database.getAllDoctor ();		for ( Doctor doctor :				doctorList ) {			if (idField.getText ().equals ( doctor.getId () ))				continue;			if (emailField.getText ().equals ( doctor.getEmail () )){				emailField.setStyle ( "-fx-background-color: #ebbebebe;" );				validity = false;			}			if (cnicField.getText ().equals ( doctor.getCnic () )){				cnicField.setStyle ( "-fx-background-color: #ebbebebe;" );				validity = false;			}					}				if (!validity)			return false;		return true;	}		public void updateDoctor( ActionEvent event) {		try {			if ( !validity ())				return;			database.updateDoctorById ( idField.getText (), fnameField.getText (), lnameField.getText (), cnicField.getText (), phoneField.getText (), emailField.getText (), addressField.getText (), cityField.getText (), doctor.getDepartment () );			toAllDoctor ( event );		} catch (Exception e) {			e.printStackTrace ();		}	}		public void toAllPatient ( ActionEvent event) throws IOException {		root = FXMLLoader.load( Objects.requireNonNull(getClass().getResource("adminAllPatients.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene (root);		stage.setScene(scene);		stage.show();	}		public void toAllAdmin ( ActionEvent event) throws IOException {		root = FXMLLoader.load( Objects.requireNonNull(getClass().getResource("adminAllAdmin.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene (root);		stage.setScene(scene);		stage.show();	}		public void toAdminHome ( ActionEvent event) throws IOException {		root = FXMLLoader.load( Objects.requireNonNull(getClass().getResource("adminHome.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene (root);		stage.setScene(scene);		stage.show();	}	public void toAllDoctor ( ActionEvent event) throws IOException {		root = FXMLLoader.load( Objects.requireNonNull(getClass().getResource("adminAllDoctor.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene (root);		stage.setScene(scene);		stage.show();	}		public void logout ( ActionEvent event) throws IOException {		root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource("landing.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene(root);		stage.setScene(scene);		stage.show();	}}