package sample.demo2;import Model.Doctor;import javafx.collections.ObservableList;import javafx.event.ActionEvent;import javafx.fxml.FXML;import javafx.fxml.FXMLLoader;import javafx.fxml.Initializable;import javafx.scene.Node;import javafx.scene.Parent;import javafx.scene.Scene;import javafx.scene.control.Button;import javafx.scene.control.TableCell;import javafx.scene.control.TableColumn;import javafx.scene.control.TableView;import javafx.scene.control.cell.PropertyValueFactory;import javafx.stage.Stage;import java.io.IOException;import java.net.URL;import java.util.Objects;import java.util.ResourceBundle;public class AdminAllDoctorController  implements Initializable {	@FXML	private TableView <Doctor> doctorTable;	@FXML	private TableColumn<Doctor, String> email, id, name, phone, srNo;	@FXML	private TableColumn <Doctor, Button> deleteButton, editButton,  viewButton;	private Stage stage;	private Scene scene;	private Parent root;	DatabaseConnection database = DatabaseConnection.getInstance ();	@Override	public void initialize ( URL url, ResourceBundle resourceBundle ) {		try {			ObservableList <Doctor> doctorList = database.getAllDoctor ();						srNo.setCellValueFactory(new PropertyValueFactory <> ("srNo"));			id.setCellValueFactory(new PropertyValueFactory<>("id"));			name.setCellValueFactory(new PropertyValueFactory<>("name"));			email.setCellValueFactory(new PropertyValueFactory<>("email"));			phone.setCellValueFactory(new PropertyValueFactory<>("phone"));			viewButton.setCellValueFactory(new PropertyValueFactory<>("viewButton"));			editButton.setCellValueFactory(new PropertyValueFactory<>("editButton"));			deleteButton.setCellValueFactory(new PropertyValueFactory<>("deleteButton"));						doctorTable.setItems(doctorList);						viewButton.setCellFactory(param -> new TableCell <Doctor, Button> () {				@Override				protected void updateItem(Button button, boolean empty) {					super.updateItem(button, empty);										if (empty || button == null) {						setGraphic(null);					} else {						setGraphic(button);						button.setOnAction(event -> {							Doctor doctor = getTableView().getItems().get(getIndex());							AdminViewSingleDoctorController.setDoctorId (doctor.getId());														try {								toViewDoctor(event);							} catch (IOException e) {								throw new RuntimeException(e);							}						});					}				}			});						editButton.setCellFactory(param -> new TableCell<Doctor, Button>() {				@Override				protected void updateItem(Button button, boolean empty) {					super.updateItem(button, empty);										if (empty || button == null) {						setGraphic(null);					} else {						setGraphic(button);						button.setOnAction(event -> {							Doctor doctor = getTableView().getItems().get(getIndex());							AdminEditSingleDoctorController.setDoctorId (doctor.getId());														try {								toEditDoctor (event);							} catch (IOException e) {								throw new RuntimeException(e);							}						});					}				}			});						deleteButton.setCellFactory(param -> new TableCell<Doctor, Button>() {				@Override				protected void updateItem(Button button, boolean empty) {					super.updateItem(button, empty);										if (empty || button == null) {						setGraphic(null);					} else {						setGraphic(button);						button.setOnAction(event -> {							Doctor doctor = getTableView().getItems().get(getIndex());														try {								deleteDoctor (event, doctor.getId ());							} catch (IOException e) {								throw new RuntimeException(e);							}						});					}				}			});		} catch (Exception e) {			e.printStackTrace ();		}	}			public void toAllPatient ( ActionEvent event) throws IOException {		root = FXMLLoader.load( Objects.requireNonNull(getClass().getResource("adminAllPatients.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene (root);		stage.setScene(scene);		stage.show();	}		public void toAllAdmin ( ActionEvent event) throws IOException {		root = FXMLLoader.load( Objects.requireNonNull(getClass().getResource("adminAllAdmin.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene (root);		stage.setScene(scene);		stage.show();	}		public void toAdminHome ( ActionEvent event) throws IOException {		root = FXMLLoader.load( Objects.requireNonNull(getClass().getResource("adminHome.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene (root);		stage.setScene(scene);		stage.show();	}	public void toAllDoctor ( ActionEvent event) throws IOException {		root = FXMLLoader.load( Objects.requireNonNull(getClass().getResource("adminAllDoctor.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene (root);		stage.setScene(scene);		stage.show();	}		public void toAddDoctor ( ActionEvent event) throws IOException {		root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource("adminAddDoctor.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene(root);		stage.setScene(scene);		stage.show();	}		public void toViewDoctor ( ActionEvent event) throws IOException {		root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource("AdminViewSingleDoctor.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene(root);		stage.setScene(scene);		stage.show();	}		public void toEditDoctor ( ActionEvent event) throws IOException {		root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource("AdminEditSingleDoctor.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene(root);		stage.setScene(scene);		stage.show();	}		public void deleteDoctor ( ActionEvent event, String id) throws IOException {		database.deleteDoctorById ( id );		doctorTable.setItems(database.getAllDoctor ());	}		public void logout ( ActionEvent event) throws IOException {		root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource("landing.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene(root);		stage.setScene(scene);		stage.show();	}}