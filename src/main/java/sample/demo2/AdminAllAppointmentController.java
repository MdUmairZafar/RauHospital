package sample.demo2;import Model.Appointment;import Model.Doctor;import Model.Patient;import javafx.collections.ObservableList;import javafx.event.ActionEvent;import javafx.fxml.FXML;import javafx.fxml.FXMLLoader;import javafx.fxml.Initializable;import javafx.scene.Node;import javafx.scene.Parent;import javafx.scene.Scene;import javafx.scene.control.Button;import javafx.scene.control.TableCell;import javafx.scene.control.TableColumn;import javafx.scene.control.TableView;import javafx.scene.control.cell.PropertyValueFactory;import javafx.stage.Stage;import java.io.IOException;import java.net.URL;import java.util.Objects;import java.util.ResourceBundle;public class AdminAllAppointmentController implements Initializable {		@FXML	private TableView <Appointment> appointmentTable;		@FXML	private TableColumn<Appointment, String> aptDate, aptId, srNo, doctorName, patientName;		@FXML	private TableColumn<Appointment, Button> deleteButton, editButton, viewButton;	private Stage stage;	private Scene scene;	private Parent root;			DatabaseConnection database = DatabaseConnection.getInstance ();		@Override	public void initialize ( URL url, ResourceBundle resourceBundle ) {		try {									ObservableList <Appointment> appointmentList = database.getAllAppointment ();									srNo.setCellValueFactory(new PropertyValueFactory <> ("srNo"));			aptId.setCellValueFactory(new PropertyValueFactory<>("id"));			patientName.setCellValueFactory(new PropertyValueFactory<>("patientName"));			doctorName.setCellValueFactory(new PropertyValueFactory<>("doctorName"));			aptDate.setCellValueFactory(new PropertyValueFactory<>("date"));			viewButton.setCellValueFactory(new PropertyValueFactory<>("viewButton"));			deleteButton.setCellValueFactory(new PropertyValueFactory<>("deleteButton"));						appointmentTable.setItems(appointmentList);						viewButton.setCellFactory(param -> new TableCell <Appointment, Button> () {				@Override				protected void updateItem(Button button, boolean empty) {					super.updateItem(button, empty);										if (empty || button == null) {						setGraphic(null);					} else {						setGraphic(button);						button.setOnAction(event -> {							Appointment appointment = getTableView().getItems().get(getIndex());							AdminViewSingleAppointmentController.setAppointmentId(appointment.getId ());														try {								toViewAppointment(event);							} catch (IOException e) {								throw new RuntimeException(e);							}						});					}				}			});									deleteButton.setCellFactory(param -> new TableCell<Appointment, Button>() {				@Override				protected void updateItem(Button button, boolean empty) {					super.updateItem(button, empty);										if (empty || button == null) {						setGraphic(null);					} else {						setGraphic(button);						button.setOnAction(event -> {							Appointment appointment = getTableView().getItems().get(getIndex());														try {								deleteAppointment (event, appointment.getId ());							} catch (IOException e) {								throw new RuntimeException(e);							}						});					}				}			});				} catch (Exception e) {			System.out.println(e.getMessage ());		}	}				public void toAllPatient ( ActionEvent event) throws IOException {		root = FXMLLoader.load( Objects.requireNonNull(getClass().getResource("adminAllPatients.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene (root);		stage.setScene(scene);		stage.show();	}		public void toAllAdmin ( ActionEvent event) throws IOException {		root = FXMLLoader.load( Objects.requireNonNull(getClass().getResource("adminAllAdmin.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene (root);		stage.setScene(scene);		stage.show();	}		public void toAdminHome ( ActionEvent event) throws IOException {		root = FXMLLoader.load( Objects.requireNonNull(getClass().getResource("adminHome.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene (root);		stage.setScene(scene);		stage.show();	}	public void toAllDoctor ( ActionEvent event) throws IOException {		root = FXMLLoader.load( Objects.requireNonNull(getClass().getResource("adminAllDoctor.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene (root);		stage.setScene(scene);		stage.show();	}		public void toViewAppointment(ActionEvent event) throws IOException {		root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource("adminViewSingleAppointment.fxml")));		stage = (Stage) ((Node) event.getSource()).getScene().getWindow();		scene = new Scene(root);		stage.setScene(scene);		stage.show();	}				public void deleteAppointment(ActionEvent event, String id) throws IOException {		database.deleteAppointmentById ( id );		appointmentTable.setItems(database.getAllAppointment ());	}		public void logout ( ActionEvent event) throws IOException {		root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource("landing.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene(root);		stage.setScene(scene);		stage.show();	}	}