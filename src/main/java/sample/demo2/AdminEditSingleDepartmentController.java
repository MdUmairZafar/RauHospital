package sample.demo2;import Model.Department;import javafx.collections.ObservableList;import javafx.event.ActionEvent;import javafx.fxml.FXML;import javafx.fxml.FXMLLoader;import javafx.fxml.Initializable;import javafx.scene.Node;import javafx.scene.Parent;import javafx.scene.Scene;import javafx.scene.control.TextField;import javafx.stage.Stage;import java.io.IOException;import java.net.URL;import java.time.LocalDate;import java.util.Objects;import java.util.ResourceBundle;public class AdminEditSingleDepartmentController implements Initializable {	@FXML	private TextField nameField;		@FXML	private TextField idField;		private static String departmentId;	private Stage stage;	private Scene scene;	private Parent root;		public static void setDepartmentId ( String departmentId ) {		AdminEditSingleDepartmentController.departmentId = departmentId;	}	DatabaseConnection database = DatabaseConnection.getInstance ();	@Override	public void initialize ( URL url, ResourceBundle resourceBundle ) {		try {						Department department = database.getDepartmentById ( departmentId );						idField.setText ( department.getId () );			nameField.setText ( department.getName () );					} catch (Exception e) {			e.printStackTrace ();		}	}		public void toAllPatient ( ActionEvent event) throws IOException {		root = FXMLLoader.load( Objects.requireNonNull(getClass().getResource("adminAllPatients.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene (root);		stage.setScene(scene);		stage.show();	}		public void toAdminHome ( ActionEvent event) throws IOException {		root = FXMLLoader.load( Objects.requireNonNull(getClass().getResource("adminHome.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene (root);		stage.setScene(scene);		stage.show();	}	public void toAllDoctor ( ActionEvent event) throws IOException {		root = FXMLLoader.load( Objects.requireNonNull(getClass().getResource("adminAllDoctor.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene (root);		stage.setScene(scene);		stage.show();	}	public void toAllAdmin ( ActionEvent event) throws IOException {		root = FXMLLoader.load( Objects.requireNonNull(getClass().getResource("adminAllAdmin.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene (root);		stage.setScene(scene);		stage.show();	}	public void toAllDepartment ( ActionEvent event) throws IOException {		root = FXMLLoader.load( Objects.requireNonNull(getClass().getResource("adminAllDepartment.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene (root);		stage.setScene(scene);		stage.show();	}		public void logout ( ActionEvent event) throws IOException {		root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource("landing.fxml")));		stage = (Stage) ((Node)event.getSource()).getScene().getWindow();		scene = new Scene(root);		stage.setScene(scene);		stage.show();	}			public boolean validity () {		if (idField.getText ().isBlank ()) {			idField.setStyle ( "-fx-background-color: #ebbebe;" );			return false;		}		if (nameField.getText ().isBlank ()) {			nameField.setStyle ( "-fx-background-color: #ebbebe;" );			return false;		}		ObservableList<Department> departmentList = database.getAllDepartment ();		for ( Department department : departmentList ) {			if (department.getId ().equals ( idField.getText () ) )				continue;			if(department.getName ().equals ( nameField.getText () )){				nameField.setStyle ( "-fx-background-color: #ebbebe;" );				return false;			}		}		return true;	}		public void updateDepartment(ActionEvent event) {		try {			if (!validity ())				return;			database.updateDepartmentById ( idField.getText (), nameField.getText () );			toAllDepartment ( event );		} catch (Exception e) {			e.printStackTrace ();		}	}}